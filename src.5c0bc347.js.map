{"version":3,"sources":["js/timer.js","index.js"],"names":["CountdownTimer","targetDate","days","document","querySelector","hours","minutes","seconds","startTimer","getTime","setInterval","currentTime","Date","now","deltaTime","time","getTimeComponents","timerInterface","date","pad","Math","floor","mins","secs","data","textContent","String","value","padStart","timer","selector"],"mappings":";;;AA4CG,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA5CkBA,IAAAA,EAAAA,WACS,SAAA,EAAA,GAAdC,IAAAA,EAAAA,EAAAA,WAAc,EAAA,KAAA,GACrBA,KAAAA,WAAaA,EACbC,KAAAA,KAAOC,SAASC,cAAc,6BAC9BC,KAAAA,MAAQF,SAASC,cAAc,8BAC/BE,KAAAA,QAAUH,SAASC,cAAc,6BACjCG,KAAAA,QAAUJ,SAASC,cAAc,6BACjCI,KAAAA,aAqCN,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,aAlCY,MAAA,WAAA,IAAA,EAAA,KACNC,KAAAA,UACLC,YAAY,WACV,EAAKD,WACJ,OA8BJ,CAAA,IAAA,UA3BS,MAAA,WACFE,IAAAA,EAAcC,KAAKC,MACnBC,EAAY,KAAKb,WAAaU,EAC9BI,EAAO,KAAKC,kBAAkBF,GAC/BG,KAAAA,eAAeF,KAuBrB,CAAA,IAAA,oBApBiBG,MAAAA,SAAAA,GAQT,MAAA,CAAEhB,KAPI,KAAKiB,IAAIC,KAAKC,MAAMH,EAAQ,QAO1Bb,MAND,KAAKc,IACjBC,KAAKC,MAAOH,EAAQ,MAAyB,OAKzBI,KAHT,KAAKH,IAAIC,KAAKC,MAAOH,EAAQ,KAAoB,MAGlCK,KAFf,KAAKJ,IAAIC,KAAKC,MAAOH,EAAQ,IAAc,SAczD,CAAA,IAAA,iBATcM,MAAAA,SAAAA,GACRtB,KAAAA,KAAKuB,YAAcC,OAAOF,EAAKtB,MAC/BG,KAAAA,MAAMoB,YAAcC,OAAOF,EAAKnB,OAChCC,KAAAA,QAAQmB,YAAcC,OAAOF,EAAKF,MAClCf,KAAAA,QAAQkB,YAAcC,OAAOF,EAAKD,QAKxC,CAAA,IAAA,MAFGI,MAAAA,SAAAA,GACKD,OAAAA,OAAOC,GAAOC,SAAS,EAAG,SAClC,EA5CkB5B,GA4ClB,QAAA,QAAA;;ACzCH,aAHA,QAAA,oBACA,IAAA,EAAA,EAAA,QAAA,eAEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,IAAM6B,EAAQ,IAAI7B,EAAJ,QAAmB,CAC/B8B,SAAU,WACV7B,WAAY,IAAIW,KAAK","file":"src.5c0bc347.js","sourceRoot":"../src","sourcesContent":["export default class CountdownTimer {\n  constructor({ targetDate }) {\n    this.targetDate = targetDate;\n    this.days = document.querySelector('.value[data-value=\"days\"]');\n    this.hours = document.querySelector('.value[data-value=\"hours\"]');\n    this.minutes = document.querySelector('.value[data-value=\"mins\"]');\n    this.seconds = document.querySelector('.value[data-value=\"secs\"]');\n    this.startTimer();\n  }\n\n  startTimer() {\n    this.getTime();\n    setInterval(() => {\n      this.getTime();\n    }, 1000);\n  }\n\n  getTime() {\n    const currentTime = Date.now();\n    const deltaTime = this.targetDate - currentTime;\n    const time = this.getTimeComponents(deltaTime);\n    this.timerInterface(time);\n  }\n\n  getTimeComponents(date) {\n    const days = this.pad(Math.floor(date / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(\n      Math.floor((date % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n    );\n    const mins = this.pad(Math.floor((date % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((date % (1000 * 60)) / 1000));\n\n    return { days, hours, mins, secs };\n  }\n\n  timerInterface(data) {\n    this.days.textContent = String(data.days);\n    this.hours.textContent = String(data.hours);\n    this.minutes.textContent = String(data.mins);\n    this.seconds.textContent = String(data.secs);\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n}\n","import './css/common.css';\nimport CountdownTimer from './js/timer';\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Dec 31, 2020, 23:59:59'),\n});\n"]}